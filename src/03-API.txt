[Controller] ---> [Service] ---> [Repository]

    1. Insert (POST)
        - postsRepository.save(requestDto.toEntity()).getId();
        - repository에서 끝
    2. Select (GET)
        - Posts posts = postsRepository.findById(id).orElseThrow(()->new IllegalArgumentException("해당 사용자가 없습니다. id=" + id));
          posts.update(requestDto.getTitle(), requestDto.getContent());

          return id;
        - repository ---> posts 객체의 update 메소드 사용
    3. Update (PUT)
        - Posts entity = postsRepository.findById(id).orElseThrow(()->new IllegalArgumentException("해당 사용자가 없습니다. id="+id));

          // dto로 반환
          return new PostsResponseDto(entity);
        - repository ---> dto로 변환 후 반환

@SpringBootTest
    - @WebMvcTest 경우 JPA 기능 작동하지 않음
    - JPA 기능까지 한번에 테스트할 경우 ---> @SpringBootTest, TestRestTemplate 사용
